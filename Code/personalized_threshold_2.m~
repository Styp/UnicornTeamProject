function [BW] = personalized_threshold_2(original_image)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder App. The colorspace and
%  minimum/maximum values for each channel of the colorspace were set in the
%  App and result in a binary mask BW and a composite image maskedRGBImage,
%  which shows the original RGB image values under the mask BW.

% Auto-generated by colorThresholder app on 04-Apr-2017
%------------------------------------------------------
image= original_image;

image = imgaussfilt(image,2);

%histeq:
image(:,:,1) = histeq(image(:,:,1));
image(:,:,2) = histeq(image(:,:,2));
image(:,:,3) = histeq(image(:,:,3));


% Convert RGB image to chosen color space
I = rgb2hsv(image);

%Define threshold for red

H_red_1 = [0,10/255];
H_red_2 = [ 223/255 , 1];
S_red = [50/255 , 1];

%Threshold for blue 
H_blue_1 = [120/255 , 165/255];
S_blue = [80/255 , 175/255];

% Threshold for yellow 
H_yellow_1 = [0.065 ,0.166];
S_yellow = [0.566 , 1];




% Create the binary image based on chosen histogram thresholds
BW_red = ( ((I(:,:,1) >= H_red_1(1) & I(:,:,1) <= H_red_1(2) ) | ... 
    (I(:,:,1) >= H_red_2(1) & I(:,:,1) <= H_red_2(2) )) & ...
    (I(:,:,2) >= S_red(1) & I(:,:,2) <= S_red(2))) ;
BW_blue=    ( (I(:,:,1) >= H_blue_1(1) & I(:,:,1) <= H_blue_1(2) ) & ...
    (I(:,:,2) >= S_blue(1) & I(:,:,2) <= S_blue(2)));
BW_yellow= ( (I(:,:,1) >= H_yellow_1(1) & I(:,:,1) <= H_yellow_1(2) ) & ...
    (I(:,:,2) >= S_yellow(1) & I(:,:,2) <= S_yellow(2))) ;


% median filter to remove noise and unnecessary information 
BW_red = medfilt2(BW_red, [3,3]);
BW_blue = medfilt2(BW_blue, [3,3]);
BW_yellow = medfilt2(BW_yellow, [3,3]);

%blur the edges 
image = ordfilt2(image,36,ones(6,6));

image = imfill(image,'holes');

BW= BW_red + BW_blue + BW_yellow;


